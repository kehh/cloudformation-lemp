{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Creates a bastion server",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "SshLocation": {
      "Description": "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "SubnetId": {
      "Description": "The identifier of the public subnet in which to place the bastion instance",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "VpcId": {
      "Description": "The identifier of the VPC in which to place the bastion instance",
      "Type": "AWS::EC2::VPC::Id"
    }
  },
  "Mappings": {
    "InstanceConfig": {
      "Bastion": {
        "InstanceType": "t2.micro",
        "ImageId": "ami-5ec1673e"
      }
    }
  },
  "Resources": {
    "BastionElasticAddress": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "BastionSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Bastion servers",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "SshLocation"
            }
          }
        ],
        "VpcId": {
          "Ref": "VpcId"
        }
      }
    },
    "BastionInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Fn::FindInMap": [
            "InstanceConfig",
            "Bastion",
            "InstanceType"
          ]
        },
        "SecurityGroupIds": [
          {
            "Ref": "BastionSecurityGroup"
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "InstanceConfig",
            "Bastion",
            "ImageId"
          ]
        },
        "SubnetId": {
          "Ref": "SubnetId"
        }
      }
    },
    "BastionAddressAssociation": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "InstanceId": {
          "Ref": "BastionInstance"
        },
        "EIP": {
          "Ref": "BastionElasticAddress"
        }
      }
    }
  },
  "Outputs": {
    "BastionAddress": {
      "Value": {
        "Ref": "BastionElasticAddress"
      }
    }
  }
}